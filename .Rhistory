ht_ared <- 0
hrv<-which(cd$home$incidentEvents$period$displayName=="FirstHalf")
if (length(cd$home$incidentEvents)>0) {
for (i in hrv){
if(((cd$home$incidentEvents$cardType$displayName[i]=="SecondYellow" ) && (cd$home$incidentEvents$period$displayName[i] == "FirstHalf")) || ((cd$home$incidentEvents$cardType$displayName[i]=="Red" ) && (cd$home$incidentEvents$period$displayName[i] == "FirstHalf"))){
ht_hred<-ht_hred+1
}
}
}
ht_hred <- 0
ht_ared <- 0
hrv<-which(cd$home$incidentEvents$period$displayName=="FirstHalf")
if (length(cd$home$incidentEvents)>0) {
for (i in hrv){
if((cd$home$incidentEvents$cardType$displayName[i]=="SecondYellow" ) && (cd$home$incidentEvents$period$displayName[i] == "FirstHalf")){
ht_hred<-ht_hred+1
}
if((cd$home$incidentEvents$cardType$displayName[i]=="Red" ) && (cd$home$incidentEvents$period$displayName[i] == "FirstHalf")){
ht_hred<-ht_hred+1
}
}
}
ht_hred <- 0
ht_ared <- 0
hrv<-which(cd$home$incidentEvents$period$displayName=="FirstHalf")
if (length(cd$home$incidentEvents)>0) {
for (i in hrv){
if((cd$home$incidentEvents$cardType$displayName[i]=="SecondYellow" ) && (cd$home$incidentEvents$period$displayName[i] == "FirstHalf")){
ht_hred<-ht_hred+1
}
if((cd$home$incidentEvents$cardType$displayName[i]=="Red" ) && (cd$home$incidentEvents$period$displayName[i] == "FirstHalf")){
ht_hred<-ht_hred+1
}
}
}
for(i in hrv){
message(cd$home$incidentEvents$cardType$displayName[i]=="SecondYellow")
}
for(i in hrv){
message(cd$home$incidentEvents$period$displayName[i] == "FirstHalf")
}
for(i in hrv){
message((cd$home$incidentEvents$period$displayName[i] == "FirstHalf") && (cd$home$incidentEvents$cardType$displayName[i]=="SecondYellow"))
}
if (length(cd$home$incidentEvents)>0) {
for (i in hrv){
if((cd$home$incidentEvents$period$displayName[i] == "FirstHalf") && (cd$home$incidentEvents$cardType$displayName[i]=="SecondYellow")){
ht_hred<-ht_hred+1
}
}
}
(cd$home$incidentEvents$period$displayName[i] == "FirstHalf") && (cd$home$incidentEvents$cardType$displayName[i]=="SecondYellow")
for(i in hrv){
(cd$home$incidentEvents$period$displayName[i] == "FirstHalf") && (cd$home$incidentEvents$cardType$displayName[i]=="SecondYellow")
}
for(i in hrv){
(cd$home$incidentEvents$period$displayName[i] == "FirstHalf") && (cd$home$incidentEvents$cardType$displayName[i]=="SecondYellow")
message((cd$home$incidentEvents$period$displayName[i] == "FirstHalf") && (cd$home$incidentEvents$cardType$displayName[i]=="SecondYellow"))
}
rm(list = ls())
ht_hred <- 0
ht_ared <- 0
hrv<-which(cd$home$incidentEvents$period$displayName=="FirstHalf")
if (length(cd$home$incidentEvents)>0) {
for (i in hrv){
if((cd$home$incidentEvents$cardType$displayName[i]=="SecondYellow")){
ht_hred<-ht_hred+1
}
if((cd$home$incidentEvents$cardType$displayName[i]=="Red" ) ){
ht_hred<-ht_hred+1
}
}
}
matchCentreUrl='https://www.whoscored.com/Matches/1284820/Live/England-Premier-League-2018-2019-Watford-Bournemouth'
matchCentreWeb<-getWebResp(matchCentreUrl)
centreData<- html_node(matchCentreWeb, xpath = '//*[@id="layout-content-wrapper"]/script[1]') %>%
html_text()
centreData<-strsplit(trimws(centreData),"\\s{2,}")
centreData<- centreData[[1]][1]
cd<-substr(centreData,22,nchar(centreData)-1)
cd<-fromJSON(cd)
matchCentreWeb<-getWebResp(matchCentreUrl)
source(getWebResp.R)
source('getWebResp.R')
matchCentreWeb<-getWebResp(matchCentreUrl)
centreData<- html_node(matchCentreWeb, xpath = '//*[@id="layout-content-wrapper"]/script[1]') %>%
html_text()
centreData<-strsplit(trimws(centreData),"\\s{2,}")
centreData<- centreData[[1]][1]
cd<-substr(centreData,22,nchar(centreData)-1)
cd<-fromJSON(cd)
matchCentreWeb<-getWebResp(matchCentreUrl)
centreData<- html_node(matchCentreWeb, xpath = '//*[@id="layout-content-wrapper"]/script[1]') %>%
html_text()
centreData<-strsplit(trimws(centreData),"\\s{2,}")
centreData<- centreData[[1]][1]
cd<-substr(centreData,22,nchar(centreData)-1)
cd<-fromJSON(cd)
ht_hred <- 0
ht_ared <- 0
hrv<-which(cd$home$incidentEvents$period$displayName=="FirstHalf")
if (length(cd$home$incidentEvents)>0) {
for (i in hrv){
if((cd$home$incidentEvents$cardType$displayName[i]=="SecondYellow")){
ht_hred<-ht_hred+1
}
if((cd$home$incidentEvents$cardType$displayName[i]=="Red" ) ){
ht_hred<-ht_hred+1
}
}
}
ht_hred <- 0
ht_ared <- 0
hrv<-which(cd$home$incidentEvents$period$displayName=="FirstHalf")
if (length(cd$home$incidentEvents)>0) {
for (i in hrv){
if(cd$home$incidentEvents$cardType$displayName[i]=="SecondYellow"){
ht_hred<-ht_hred+1
}
if(cd$home$incidentEvents$cardType$displayName[i]=="Red"){
ht_hred<-ht_hred+1
}
}
}
hrv<-which(cd$home$incidentEvents$period$displayName=="FirstHalf")
hrv
for (i in hrv){
message((cd$home$incidentEvents$cardType$displayName[i]=="SecondYellow") || (cd$home$incidentEvents$cardType$displayName[i]=="Red" ))
}
for (i in hrv){
if((cd$home$incidentEvents$cardType$displayName[i]=="SecondYellow") || (cd$home$incidentEvents$cardType$displayName[i]=="Red" )){
message("card type : ",cd$home$incidentEvents$cardType$displayName[i])
}
}
for (i in hrv){
cd$home$incidentEvents$cardType$displayName[i]
}
for (i in hrv){
message(cd$home$incidentEvents$cardType$displayName[i])
}
NA=="x"
ht_hred <- 0
ht_ared <- 0
hrv<-which(cd$home$incidentEvents$period$displayName=="FirstHalf")
if (length(cd$home$incidentEvents)>0) {
for (i in hrv){
if(!is.na(cd$home$incidentEvents$cardType$displayName[i])){}
if((cd$home$incidentEvents$cardType$displayName[i]=="SecondYellow") || (cd$home$incidentEvents$cardType$displayName[i]=="Red" )){
ht_hred<-ht_hred+1
}
}
}
}
ht_hred <- 0
ht_ared <- 0
hrv<-which(cd$home$incidentEvents$period$displayName=="FirstHalf")
if (length(cd$home$incidentEvents)>0) {
for (i in hrv){
if(!is.na(cd$home$incidentEvents$cardType$displayName[i])){
if((cd$home$incidentEvents$cardType$displayName[i]=="SecondYellow") || (cd$home$incidentEvents$cardType$displayName[i]=="Red" )){
ht_hred<-ht_hred+1
}
}
}
}
ht_hred
rm(list = ls())
source('whScored.R')
source('MatchFetch.R')
rm(list = ls())
source('MatchFetch.R')
cd
hRedCard <- 0
aRedCard <- 0
hrv<-which(cd$home$incidentEvents$period$displayName=="FirstHalf")
if (length(cd$home$incidentEvents)>0) {
for (i in hrv){
if(!is.na(cd$home$incidentEvents$cardType$displayName[i])){
if((cd$home$incidentEvents$cardType$displayName[i]=="SecondYellow") || (cd$home$incidentEvents$cardType$displayName[i]=="Red" )){
hRedCard<-hRedCard+1
}
}
}
}
hRedCard
arv<-which(cd$away$incidentEvents$period$displayName=="FirstHalf")
if (length(cd$away$incidentEvents)>0) {
for (i in hrv){
if(!is.na(cd$away$incidentEvents$cardType$displayName[i])){
if((cd$away$incidentEvents$cardType$displayName[i]=="SecondYellow") || (cd$away$incidentEvents$cardType$displayName[i]=="Red" )){
aRedCard<-aRedCard+1
}
}
}
}
aRedCard
rm(list = ls())
source('MatchFetch.R')
rm(list = ls())
source('MatchFetch.R')
hrv<-which(cd$home$incidentEvents$period$displayName=="FirstHalf")
hrv
length(cd$home$incidentEvents)
for (i in hrv){
if(!is.na(cd$home$incidentEvents$cardType$displayName[i])){
if((cd$home$incidentEvents$cardType$displayName[i]=="SecondYellow") || (cd$home$incidentEvents$cardType$displayName[i]=="Red" )){
hRedCard<-hRedCard+1
}
}
}
hRedCard
message("started counting red cards")
hRedCard <- 0
aRedCard <- 0
hrv<-which(cd$home$incidentEvents$period$displayName=="FirstHalf")
message("home FirstHalf Incident positions: "+hrv)
if (length(cd$home$incidentEvents)>0) {
for (i in hrv){
message(i,"position cardType: ",cd$home$incidentEvents$cardType$displayName[i])
if(!is.na(cd$home$incidentEvents$cardType$displayName[i])){
message(cd$home$incidentEvents$cardType$displayName[i])
if((cd$home$incidentEvents$cardType$displayName[i]=="SecondYellow") || (cd$home$incidentEvents$cardType$displayName[i]=="Red" )){
hRedCard<-hRedCard+1
message("RedCard increased")
}
}
}
}
arv<-which(cd$away$incidentEvents$period$displayName=="FirstHalf")
message("away FirstHalf Incident positions: "+arv)
if (length(cd$away$incidentEvents)>0) {
for (i in hrv){
message(i,"position cardType: ",cd$home$incidentEvents$cardType$displayName[i])
if(!is.na(cd$away$incidentEvents$cardType$displayName[i])){
if((cd$away$incidentEvents$cardType$displayName[i]=="SecondYellow") || (cd$away$incidentEvents$cardType$displayName[i]=="Red" )){
aRedCard<-aRedCard+1
message("RedCard increased")
}
}
}
}
message("started counting red cards")
hRedCard <- 0
aRedCard <- 0
hrv<-which(cd$home$incidentEvents$period$displayName=="FirstHalf")
message("home FirstHalf Incident positions: ",hrv)
if (length(cd$home$incidentEvents)>0) {
for (i in hrv){
message(i,"position cardType: ",cd$home$incidentEvents$cardType$displayName[i])
if(!is.na(cd$home$incidentEvents$cardType$displayName[i])){
message(cd$home$incidentEvents$cardType$displayName[i])
if((cd$home$incidentEvents$cardType$displayName[i]=="SecondYellow") || (cd$home$incidentEvents$cardType$displayName[i]=="Red" )){
hRedCard<-hRedCard+1
message("RedCard increased")
}
}
}
}
arv<-which(cd$away$incidentEvents$period$displayName=="FirstHalf")
message("away FirstHalf Incident positions: ",arv)
if (length(cd$away$incidentEvents)>0) {
for (i in hrv){
message(i,"position cardType: ",cd$home$incidentEvents$cardType$displayName[i])
if(!is.na(cd$away$incidentEvents$cardType$displayName[i])){
if((cd$away$incidentEvents$cardType$displayName[i]=="SecondYellow") || (cd$away$incidentEvents$cardType$displayName[i]=="Red" )){
aRedCard<-aRedCard+1
message("RedCard increased")
}
}
}
}
matchCentreUrl
rm(list = ls())
cd$away$incidentEvents$cardType$displayName
source('MatchFetch.R')
source('MatchFetch.R')
source('MatchFetch.R')
hRedCard
aRedCard
MDate<-cd$startTime
MDate<- strsplit(MDate,split = 'T')[[1]][1]
MDate
MDate<-format(as.Date(MDate), "%d/%m/%Y")
RowData["Date"]<-MDate
MDate
cd$'home'
cd$home
source('MatchFetch.R')
source('MatchFetch.R')
cd$home$incidentEvents$cardType$displayName
cd$away$incidentEvents$cardType$displayName
cd$away$incidentEvents$period$displayName
rm(list = ls())
source('MatchFetch.R')
source('MatchFetch.R')
traceback()
rm(list = ls())
source('MatchFetch.R')
source('MatchFetch.R')
rm(list = ls())
source('MatchFetch.R')
MDate
match_home
match_away
match_weather
rm(list = ls())
source('MatchFetch.R')
cd$home$incidentEvents
cd$home$incidentEvents$period$displayName
cd$home$incidentEvents$cardType
cd$away$incidentEvents$cardType
length(cd$away$incidentEvents$cardType)
length(cd$home$incidentEvents$cardType)
rm(list = ls())
source('MatchFetch.R')
source('MatchFetch.R')
away_top_players
previewUrl
previewUrl="https://www.whoscored.com/Matches/651864/Preview"
previewWeb<-getWebResp(previewUrl)
exit
q()
quit
quit()
home_top_players<-vector()
for(tp in 1:3){
xp<-paste0('//*[@id="h2h-summary-top-players"]/tbody/tr[2]/td[1]/table/tbody/tr[',tp,']/td[1]/a')
htopPlyr<-html_node(previewWeb,xpath = xp) %>% html_attr('title')
home_top_players[tp]<-htopPlyr
message(htopPlyr)
}
previewWeb<-getWebResp(previewUrl)
previewWeb<-getWebResp(previewUrl)
home_top_players<-vector()
for(tp in 1:3){
xp<-paste0('//*[@id="h2h-summary-top-players"]/tbody/tr[2]/td[1]/table/tbody/tr[',tp,']/td[1]/a')
htopPlyr<-html_node(previewWeb,xpath = xp) %>% html_attr('title')
home_top_players[tp]<-htopPlyr
message(htopPlyr)
}
hMissPlayers<- html_nodes(previewWeb,xpath = '//*[@id="missing-players"]/div[1]/table') %>% html_table()
hmp_list<- vector()
htp_m1<-"N"
htp_m2<-"N"
htp_m3<-"N"
htp_m1<-"N"
htp_m2<-"N"
htp_m3<-"N"
check_htop_missing<-match(hmp_list,home_top_players)
check_htop_missing
hMissPlayers
hMissPlayers[[1]]$Player
hmp_list <- hMissPlayers[[1]]$Player
#      xpth<- paste0('//*[@id="missing-players"]/div[2]/table/tbody/tr[',x,']/td[2]/span')
#      amReason[x]<- html_node(previewWeb,xpath = xpth) %>% html_attr('title')
#      amReason<-amReason[!is.na(amReason)]
#      if(amReason[x]== 'suspended'){
#        aRedCard<-aRedCard+1
#        message('red card player: ',aMissPlayers[[1]]$Player[x])
#      }
#    }
#  }
#
hmp_list <- hmp_list[!is.na(hmp_list)]
rm(list = ls())
source('MatchFetch.R')
source('MatchFetch.R')
q()
x=1
x
write(x,file = 'count.txt')
readtext
install.packages(readtext)
install.packages('readtext')
readChar('count.txt')
readChar('count.txt',nchars = TRUE)
x<-7
write(x,file = 'count.txt')
readChar('count.txt',nchars = TRUE)
readChar('count1.txt',nchars = TRUE)
x<-"4 Start"
write(x,file = 'count.txt')
readChar('count1.txt',nchars = TRUE)
readChar('count.txt',nchars = TRUE)
x<-"4 Start"
write(x,file = 'count.txt')
readChar('count.txt',nchars = TRUE)
x<- "stop"
write(x,file = 'countc.txt')
readChar('countc.txt',nchars = TRUE)
readChar('countc.txt',nchars = FAlse)
readChar('countc.txt',nchars = FALSE)
readLines('count.txt')
y<-readLines('count.txt')
split(y,"\\s")
strsplit(y,'\\y')
strsplit(y,'\\s')
z,-strsplit(y,'\\s')
z<-strsplit(y,'\\s')
z[[1]][1]
z[[1]][2]
rm(list = ls())
source('MatchFetch.R')
details<-readlines('Details.json')
library(magrittr)
details<-readlines('Details.json')
details<-fromJSON('Details.json')
details$matchid
details$isSkipping
source('MatchFetch.R')
is.null(details$matchid)
matchId==details$matchid
matchId
details$matchid="222"
details<-toJSON(details)
details
matchId==details$matchid
details<-fromJSON('Details.json')
details
details$seriesLink
class(details)
details<-toJSON(details)
class(details)
source('MatchFetch.R')
source('MatchFetch.R')
rm(list = ls())
source('MatchFetch.R')
rm(list = ls())
source('MatchFetch.R')
rm(list = ls())
source('MatchFetch.R')
rm(list = ls())
source('MatchFetch.R')
rm(list = ls())
source('MatchFetch.R')
rm(list = ls())
source('MatchFetch.R')
rm(list = ls())
source('MatchFetch.R')
rm(list = ls())
source('MatchFetch.R')
rm(list = ls())
source('MatchFetch.R')
rm(list = ls())
source('MatchFetch.R')
rm(list = ls())
source('MatchFetch.R')
rm(list = ls())
source('MatchFetch.R')
source('MatchFetch.R')
source('MatchFetch.R')
rm(list = ls())
source('MatchFetch.R')
source('MatchFetch.R')
source('MatchFetch.R')
details<-fromJSON('Details.json')
seriesLink<-details$seriesLink
yr<-details$year
source('MatchFetch.R')
rm(list = ls())
source('MatchFetch.R')
source('MatchFetch.R')
cat(details)
write_json(details,'d.json')
load('d.json')
x<-fromJSON('d.json')
x
rm(list = ls())
source('MatchFetch.R')
rm(list = ls())
source('MatchFetch.R')
x<-{"seriesLink":["https://www.whoscored.com/Regions/108/Tournaments/5/Seasons/7468/Italy-Serie-A"],"year":["2012/2013"],"matchid":{},"isSkipping":[true]}
x<-"{"seriesLink":["https://www.whoscored.com/Regions/108/Tournaments/5/Seasons/7468/Italy-Serie-A"],"year":["2012/2013"],"matchid":{},"isSkipping":[true]}"
x<-'{"seriesLink":["https://www.whoscored.com/Regions/108/Tournaments/5/Seasons/7468/Italy-Serie-A"],"year":["2012/2013"],"matchid":{},"isSkipping":[true]}'
x
x<-fromJSON('{"seriesLink":["https://www.whoscored.com/Regions/108/Tournaments/5/Seasons/7468/Italy-Serie-A"],"year":["2012/2013"],"matchid":{},"isSkipping":[true]}')
x$matchid
x$isSkipping
is.null(details$matchid)
!is.null(details$matchid)
rm(list = ls())
source('MatchFetch.R')
rm(list = ls())
source('MatchFetch.R')
rm(list = ls())
source('MatchFetch.R')
rm(list = ls())
source('MatchFetch.R')
df<-read.csv('dataFinal.csv')
df
nrow(df)
strsplit('https://www.whoscored.com/Regions/108/Tournaments/5/Seasons/7468/Italy-Serie-A','//')
strsplit('https://www.whoscored.com/Regions/108/Tournaments/5/Seasons/7468/Italy-Serie-A','/')
strsplit('https://www.whoscored.com/Regions/108/Tournaments/5/Seasons/7468/Italy-Serie-A','/')
sapply(strsplit('https://www.whoscored.com/Regions/108/Tournaments/5/Seasons/7468/Italy-Serie-A','/'), tail, 1)
rm(list = ls())
source('MatchFetch.R')
rm(list = ls())
source('MatchFetch.R')
yr<-"2012/2013"
gsub('/','-',yr)
rm(list = ls())
source('MatchFetch.R')
source('MatchFetch.R')
setwd('../../')
dir
dir()
mkdir
setwd('Practice1')
setwd('Prac1')
ll
dir()
